pipeline {
  agent any
  stages {
    stage("Get Branch Name and Changes") {
      steps {
        script {
         
          def branchName = env.BRANCH_NAME
          echo "Branch name: ${branchName}"

          def changes = sh script: "git log --pretty=%B -n 100 origin/${branchName}", returnStdout: true

          def lastChanges = sh script: "git log --oneline --decorate origin/${branchName}", returnStdout: true

          echo "List of added changes:"
          echo "${changes}"
        }
      }
    }
        stage('Test') {
            steps {
                sh "mvn -D clean test"
            }
 
            post {                
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                   publishHTML([
                       allowMissing: false, 
                       alwaysLinkToLastBuild: false, 
                       keepAll: false, 
                       reportDir: 'target/surefire-reports/', 
                       reportFiles: 'emailable-report.html', 
                       reportName: 'HTML Report', 
                       reportTitles: '', 
                       useWrapperFileDirectly: true])
                }
            }
        }
    }
  }
